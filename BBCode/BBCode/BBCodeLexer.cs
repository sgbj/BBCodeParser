// Generated from BBCodeLexer.g4 by ANTLR 4.0.1-SNAPSHOT
namespace BBCode.Grammar {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

public partial class BBCodeLexer : Lexer {
	public const int
		SEA_WS=1, OPEN=2, TEXT=3, CLOSE=4, SLASH_CLOSE=5, SLASH=6, EQUALS=7, S=8, 
		Name=9, Value=10;
	public const int INSIDE = 1;
	public static string[] modeNames = {
		"DEFAULT_MODE", "INSIDE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"SEA_WS", "'['", "TEXT", "']'", "'/]'", "'/'", "'='", "S", "Name", "Value"
	};
	public static readonly string[] ruleNames = {
		"SEA_WS", "OPEN", "TEXT", "CLOSE", "SLASH_CLOSE", "SLASH", "EQUALS", "S", 
		"Name", "Value"
	};


	public BBCodeLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "BBCodeLexer.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 1 : OPEN_action(_localctx, actionIndex); break;

		case 3 : CLOSE_action(_localctx, actionIndex); break;

		case 4 : SLASH_CLOSE_action(_localctx, actionIndex); break;

		case 7 : S_action(_localctx, actionIndex); break;
		}
	}
	private void OPEN_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: PushMode(INSIDE);  break;
		}
	}
	private void S_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: Skip();  break;
		}
	}
	private void SLASH_CLOSE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: PopMode();  break;
		}
	}
	private void CLOSE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: PopMode();  break;
		}
	}

	public static readonly string _serializedATN =
		"\x5\x4\fT\b\x1\b\x1\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6"+
		"\t\x6\x4\a\t\a\x4\b\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x3\x2\x3\x2\x5\x2\x1B"+
		"\n\x2\x3\x2\x6\x2\x1E\n\x2\r\x2\xE\x2\x1F\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4"+
		"\x6\x4\'\n\x4\r\x4\xE\x4(\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3"+
		"\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\a\n>\n\n\f"+
		"\n\xE\n\x41\v\n\x3\v\x3\v\a\v\x45\n\v\f\v\xE\vH\v\v\x3\v\x3\v\x3\v\a\v"+
		"M\n\v\f\v\xE\vP\v\v\x3\v\x5\vS\n\v\x2\x2\x2\f\x4\x2\x3\x1\x6\x2\x4\x2"+
		"\b\x2\x5\x1\n\x2\x6\x3\f\x2\a\x4\xE\x2\b\x1\x10\x2\t\x1\x12\x2\n\x5\x14"+
		"\x2\v\x1\x16\x2\f\x1\x4\x2\x3\t\x4\v\v\"\"\x3]]\x5\v\f\xF\xF\"\"\x5&&"+
		"\x43\\\x63|\x6&&\x32;\x43\\\x63|\x4$$]]\x4))]]Z\x2\x4\x3\x2\x2\x2\x2\x6"+
		"\x3\x2\x2\x2\x2\b\x3\x2\x2\x2\x3\n\x3\x2\x2\x2\x3\f\x3\x2\x2\x2\x3\xE"+
		"\x3\x2\x2\x2\x3\x10\x3\x2\x2\x2\x3\x12\x3\x2\x2\x2\x3\x14\x3\x2\x2\x2"+
		"\x3\x16\x3\x2\x2\x2\x4\x1D\x3\x2\x2\x2\x6!\x3\x2\x2\x2\b&\x3\x2\x2\x2"+
		"\n*\x3\x2\x2\x2\f.\x3\x2\x2\x2\xE\x33\x3\x2\x2\x2\x10\x35\x3\x2\x2\x2"+
		"\x12\x37\x3\x2\x2\x2\x14;\x3\x2\x2\x2\x16R\x3\x2\x2\x2\x18\x1E\t\x2\x2"+
		"\x2\x19\x1B\a\xF\x2\x2\x1A\x19\x3\x2\x2\x2\x1A\x1B\x3\x2\x2\x2\x1B\x1C"+
		"\x3\x2\x2\x2\x1C\x1E\a\f\x2\x2\x1D\x18\x3\x2\x2\x2\x1D\x1A\x3\x2\x2\x2"+
		"\x1E\x1F\x3\x2\x2\x2\x1F\x1D\x3\x2\x2\x2\x1F \x3\x2\x2\x2 \x5\x3\x2\x2"+
		"\x2!\"\a]\x2\x2\"#\x3\x2\x2\x2#$\b\x3\x2\x2$\a\x3\x2\x2\x2%\'\n\x3\x2"+
		"\x2&%\x3\x2\x2\x2\'(\x3\x2\x2\x2(&\x3\x2\x2\x2()\x3\x2\x2\x2)\t\x3\x2"+
		"\x2\x2*+\a_\x2\x2+,\x3\x2\x2\x2,-\b\x5\x3\x2-\v\x3\x2\x2\x2./\a\x31\x2"+
		"\x2/\x30\a_\x2\x2\x30\x31\x3\x2\x2\x2\x31\x32\b\x6\x4\x2\x32\r\x3\x2\x2"+
		"\x2\x33\x34\a\x31\x2\x2\x34\xF\x3\x2\x2\x2\x35\x36\a?\x2\x2\x36\x11\x3"+
		"\x2\x2\x2\x37\x38\t\x4\x2\x2\x38\x39\x3\x2\x2\x2\x39:\b\t\x5\x2:\x13\x3"+
		"\x2\x2\x2;?\t\x5\x2\x2<>\t\x6\x2\x2=<\x3\x2\x2\x2>\x41\x3\x2\x2\x2?=\x3"+
		"\x2\x2\x2?@\x3\x2\x2\x2@\x15\x3\x2\x2\x2\x41?\x3\x2\x2\x2\x42\x46\a$\x2"+
		"\x2\x43\x45\n\a\x2\x2\x44\x43\x3\x2\x2\x2\x45H\x3\x2\x2\x2\x46\x44\x3"+
		"\x2\x2\x2\x46G\x3\x2\x2\x2GI\x3\x2\x2\x2H\x46\x3\x2\x2\x2IS\a$\x2\x2J"+
		"N\a)\x2\x2KM\n\b\x2\x2LK\x3\x2\x2\x2MP\x3\x2\x2\x2NL\x3\x2\x2\x2NO\x3"+
		"\x2\x2\x2OQ\x3\x2\x2\x2PN\x3\x2\x2\x2QS\a)\x2\x2R\x42\x3\x2\x2\x2RJ\x3"+
		"\x2\x2\x2S\x17\x3\x2\x2\x2\f\x2\x3\x1A\x1D\x1F(?\x46NR";
	public static readonly ATN _ATN =
		ATNSimulator.Deserialize(_serializedATN.ToCharArray());
}
} // namespace BBCode.Grammar
